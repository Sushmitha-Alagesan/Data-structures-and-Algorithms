class Solution:
    def getConcatenation(self, nums: List[int]) -> List[int]:
        # this is without using the new array. Onlu using the existing one
        # time complexity is O(n)  and space complexity is O(2n)

        n = len(nums)
        for itr in range(0 , n):
            nums.append(nums[itr])
        return nums
**************************************************

class Solution:
    def getConcatenation(self, nums: List[int]) -> List[int]:
        # this is with using the new array.
        # time complexity is O(n)  and space complexity is O(2n+n)
        ans = []

        n = len(nums)
        for itr in range(0 , 2*n):
            ans.append(nums[itr % n])
            
        return ans
        
*****************************************************
class Solution:
    def getConcatenation(self, nums: List[int]) -> List[int]:
        # this is with using the new array.
        # time complexity is O(n) ,concatenation operation takes linear time 
        # and space complexity is O(2n)
        
        return nums + nums

